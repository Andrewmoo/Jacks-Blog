{"version":3,"sources":["actions/types.js","reducers/post.js","reducers/rootReducer.js","store.js","api/index.js","images/noimage.svg","components/Post.jsx","images/grid_four.svg","images/grid_three.svg","components/PostsList.jsx","components/AddPostForm.jsx","actions/post.js","components/EditPostForm.jsx","components/PostDetails.jsx","App.js","index.js"],"names":["FETCH_POSTS","FETCH_SINGLE_POST","CREATE_POST","UPDATE_POST","DELETE_POST","initialState","posts","currentPost","postReducer","state","action","type","types","payload","map","post","_id","filter","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","apiEndpoint","fetchPosts","a","axios","get","fetchSinglePost","id","createPost","updatePost","updatedPost","patch","deletePost","delete","useStyles","makeStyles","theme","root","maxWidth","position","media","height","paddingTop","backgroundColor","backgroundBlendMode","overlay","top","left","color","chip","marginTop","spacing","Post","date","title","subtitle","content","tag","image","createdAt","classes","Card","className","CardMedia","noImage","Typography","variant","moment","fromNow","CardContent","component","gutterBottom","substring","Chip","label","CardActions","Button","size","to","layoutShifter","float","margin","PostsList","useSelector","useState","layout","setLayout","onClick","src","gridThree","style","background","alt","gridFour","Grid","container","alignContent","length","item","xs","md","paper","padding","textField","marginBottom","tags","postSchema","yup","shape","required","min","oneOf","AddPostForm","open","handleClose","dispatch","useDispatch","file","setFile","useForm","resolver","yupResolver","register","handleSubmit","control","errors","reset","onSubmit","data","api","console","log","clearForm","Dialog","onClose","DialogTitle","DialogContent","noValidate","autoComplete","TextField","name","inputRef","error","fullWidth","as","Select","input","Input","index","MenuItem","value","defaultValue","multiline","rows","multiple","onDone","base64","DialogActions","buttons","EditPostForm","history","closeEditMode","message","header","display","justifyContent","width","borderRadius","PostDetails","location","match","params","editMode","setEditMode","isAuthenticated","useAuth0","useEffect","Paper","elevation","startIcon","push","Divider","flexGrow","menuButton","marginRight","App","loginWithRedirect","logout","setOpen","isLoading","CssBaseline","Container","AppBar","Toolbar","IconButton","edge","aria-label","href","exact","path","from","ReactDOM","render","domain","process","clientId","redirectUri","window","origin","document","getElementById"],"mappings":"2MAAaA,EAAc,cACdC,EAAoB,oBACpBC,EAAc,cACdC,EAAc,cACdC,EAAc,cCFrBC,EAAe,CACnBC,MAAO,GACPC,YAAa,MA6CAC,EA1CK,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEH,MAAOI,EAAOG,UAElB,KAAKD,EACH,OAAO,2BACFH,GADL,IAEEF,YAAaG,EAAOG,UAExB,KAAKD,EACH,OAAO,2BACFH,GADL,IAEEH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmBI,EAAOG,YAEnC,KAAKD,EACH,OAAO,2BACFH,GADL,IAEEH,MAAOG,EAAMH,MAAMQ,KAAI,SAACC,GACtB,OAAIA,EAAKC,MAAQN,EAAOG,QAAQG,IACvBN,EAAOG,QAEPE,KAGXR,YAAaG,EAAOG,UAExB,KAAKD,EACH,OAAO,2BACFH,GADL,IAEEH,MAAOG,EAAMH,MAAMW,QAAO,SAACF,GAAD,OAAUA,EAAKC,MAAQN,EAAOG,WACxDN,YAAa,OAEjB,QACE,OAAO,eACFE,KCvCIS,EAFKC,YAAgB,CAAEb,MAAOE,ICO9BY,EANDC,YACZH,EACA,GACAI,YAAQC,YAAgBC,O,0DCNpBC,EAAc,kDAEPC,EAAU,uCAAG,sBAAAC,EAAA,sEAAkBC,IAAMC,IAAIJ,GAA5B,mFAAH,qDAEVK,EAAe,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,sEACvBC,IAAMC,IAAN,UAAaJ,GAAb,OAA2BM,IADJ,mFAAH,sDAGfC,EAAU,uCAAG,WAAOjB,GAAP,SAAAY,EAAA,sEAAsBC,IAAMb,KAAKU,EAAaV,GAA9C,mFAAH,sDAEVkB,EAAU,uCAAG,WAAOF,EAAIG,GAAX,SAAAP,EAAA,sEAClBC,IAAMO,MAAN,UAAeV,GAAf,OAA6BM,GAAMG,GADjB,mFAAH,wDAGVE,EAAU,uCAAG,WAAOL,GAAP,SAAAJ,EAAA,sEAClBC,IAAMS,OAAN,UAAgBZ,GAAhB,OAA8BM,IADZ,mFAAH,sD,4OCbR,OAA0B,oCCenCO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,SAAU,YAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAGvBC,QAAS,CACPN,SAAU,WACVO,IAAK,OACLC,KAAM,OACNC,MAAO,SAETC,KAAM,CACJC,UAAWd,EAAMe,QAAQ,QA6CdC,GAzCF,SAAC,GAA8D,IAG7CC,EAHfzC,EAA2D,EAA3DA,IAAK0C,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACnDC,EAAU1B,KAMhB,OACE,eAAC2B,GAAA,EAAD,CAAMC,UAAWF,EAAQvB,KAAzB,UACE,cAAC0B,GAAA,EAAD,CACED,UAAWF,EAAQpB,MACnBkB,MAAOA,GAASM,GAChBV,MAAM,gBAER,sBAAKQ,UAAWF,EAAQf,QAAxB,UACE,cAACoB,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,UAbuBb,EAcAM,EAbpBQ,IAAOd,GAAMe,gBAgBlB,eAACC,GAAA,EAAD,WACE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAAKI,UAAU,IAAIC,cAAY,EAAnD,SACGjB,IACW,IACd,cAACW,EAAA,EAAD,CAAYC,QAAQ,WAAWI,UAAU,IAAIC,cAAY,EAAzD,SACGhB,IACW,IACd,cAACU,EAAA,EAAD,CAAYC,QAAQ,QAAQI,UAAU,IAAtC,UACU,OAAPd,QAAO,IAAPA,OAAA,EAAAA,EAASgB,UAAU,EAAG,MAAO,QAEhC,cAACC,GAAA,EAAD,CAAMC,MAAK,YAAOjB,GAAOS,QAAQ,WAAWJ,UAAWF,EAAQX,UAEjE,cAAC0B,GAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,UAA3B,SACE,cAAC,IAAD,CAAM8B,GAAE,iBAAYlE,GAApB,+BCxEK,OAA0B,sCCA1B,OAA0B,uCCQnCsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2C,cAAe,CACbC,MAAO,QACPC,OAAQ7C,EAAMe,QAAQ,QAsDX+B,GAlDG,WAChB,IAAMhF,EAAQiF,aAAY,SAAC9E,GAAD,OAAWA,EAAMH,MAAMA,SAD3B,EAGMkF,mBAAS,aAHf,mBAGfC,EAHe,KAGPC,EAHO,KAShB1B,EAAU1B,KAEhB,OACE,qCAEE,sBAAK4B,UAAWF,EAAQmB,cAAxB,UACE,cAACH,EAAA,EAAD,CACEV,QAAQ,OACRW,KAAK,QACLU,QAAS,kBAAMD,EAAU,cAH3B,SAKE,qBACEE,IAAKC,GACLC,MAAO,CAAEC,WAAuB,cAAXN,EAAyB,OAAS,IACvDO,IAAI,8BAGR,cAAChB,EAAA,EAAD,CACEV,QAAQ,OACRW,KAAK,QACLU,QAAS,kBAAMD,EAAU,aAH3B,SAKE,qBACEE,IAAKK,GACLH,MAAO,CAAEC,WAAuB,aAAXN,EAAwB,OAAS,IACtDO,IAAI,gCAIV,cAACE,EAAA,EAAD,CAAMC,WAAS,EAAC5C,QAAS,EAAG6C,aAAa,UAAzC,SACG9F,EAAM+F,OAAS,GACd/F,EAAMQ,KAAI,SAACC,GAAD,OACR,cAACmF,EAAA,EAAD,CAAMI,MAAI,EAAiBC,GAAI,GAAIC,GAnCzB,cAAXf,EAAyB,EAAI,EAmC5B,SACE,cAAC,GAAD,eAAU1E,KADZ,OAAgBA,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMC,c,+HCnC5BsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiE,MAAO,CACLC,QAASlE,EAAMe,QAAQ,IAEzBoD,UAAW,CACTC,aAAcpE,EAAMe,QAAQ,QAI1BsD,GAAO,CAAC,UAAW,SAAU,QAAS,UAAW,aAAc,UAAW,SAAU,UAAW,cAE/FC,GAAaC,OAAaC,MAAM,CACpCtD,MAAOqD,OAAaE,WACpBtD,SAAUoD,OAAaE,WACvBrD,QAASmD,OAAaG,IAAI,IAAID,WAC9BpD,IAAKkD,OAAYI,MAAMN,MA6GVO,GA1GK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrBC,EAAWC,cAD4B,EAGrBhC,mBAAS,MAHY,mBAGtCiC,EAHsC,KAGhCC,EAHgC,OAIcC,mBAAQ,CACjEC,SAAUC,uBAAYf,MADhBgB,EAJqC,EAIrCA,SAAUC,EAJ2B,EAI3BA,aAAcC,EAJa,EAIbA,QAASC,EAJI,EAIJA,OAAQC,EAJJ,EAIIA,MAI3CC,EAAW,SAACC,GCpBM,IAACrH,EDqBvBwG,GCrBuBxG,EDqBH,2BAAKqH,GAAN,IAAYtE,MAAO2D,ICrBhB,uCAAU,WAAOF,GAAP,iBAAA5F,EAAA,+EAET0G,EAAetH,GAFN,gBAExBqH,EAFwB,EAExBA,KACRb,EAAS,CACP5G,KAAMC,EACNC,QAASuH,IALqB,gDAQhCE,QAAQC,IAAR,MARgC,yDAAV,wDDsBtBC,KAGIA,EAAY,WAChBN,IACAR,EAAQ,MACRJ,KAGItD,EAAU1B,KAChB,OACE,eAACmG,GAAA,EAAD,CAAQpB,KAAMA,EAAMqB,QAASpB,EAA7B,UACE,cAACqB,GAAA,EAAD,iCACA,cAACC,GAAA,EAAD,UACE,qBAAK1E,UAAWF,EAAQvB,KAAxB,SACE,uBAAMoG,YAAU,EAACC,aAAa,MAAMX,SAAUJ,EAAaI,GAA3D,UACE,cAACY,GAAA,EAAD,CACEhH,GAAG,QACH+C,MAAM,QACNkE,KAAK,QACL1E,QAAQ,WACRJ,UAAWF,EAAQ2C,UACnB1B,KAAK,QACLgE,SAAUnB,EACVoB,QAAOjB,EAAOvE,MACdyF,WAAS,IAEX,cAACJ,GAAA,EAAD,CACEhH,GAAG,WACH+C,MAAM,YACNkE,KAAK,WACL1E,QAAQ,WACRJ,UAAWF,EAAQ2C,UACnB1B,KAAK,QACLgE,SAAUnB,EACVoB,QAAOjB,EAAOtE,SACdwF,WAAS,IAEX,cAAC,cAAD,CACEC,GACE,cAACC,GAAA,EAAD,CACEC,MAAO,cAACC,GAAA,EAAD,IACPrF,UAAWF,EAAQ2C,UACnBwC,WAAS,EAHX,SAKGtC,GAAK/F,KAAI,SAAC+C,EAAK2F,GAAN,OACR,cAACC,GAAA,EAAD,CAAsBC,MAAO7F,EAA7B,SACGA,GADY2F,QAMrBR,KAAK,MACLhB,QAASA,EACTkB,QAAOjB,EAAOpE,IACd8F,aAAc9C,GAAK,KAGrB,cAACkC,GAAA,EAAD,CACEhH,GAAG,UACH+C,MAAM,OACNkE,KAAK,UACLY,WAAS,EACT3E,KAAK,QACLgE,SAAUnB,EACV+B,KAAM,EACN3F,UAAWF,EAAQ2C,UACnBrC,QAAQ,WACR4E,QAAOjB,EAAOrE,QACduF,WAAS,IAGX,cAAC,KAAD,CACEW,UAAU,EACVC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtC,EAAQsC,aAKxC,eAACC,GAAA,EAAD,WACE,cAACjF,EAAA,EAAD,CAAQW,QAAS6C,EAAWpF,MAAM,UAAlC,oBAGA,cAAC4B,EAAA,EAAD,CACErE,KAAK,SACLgF,QAAS,kBAAMoC,EAAaI,EAAbJ,IACf3E,MAAM,UACNkB,QAAQ,WAJV,2B,8DE1HFhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmE,UAAW,CACTC,aAAcpE,EAAMe,QAAQ,IAE9B2G,QAAS,CACP5G,UAAWd,EAAMe,QAAQ,QAIvBsD,GAAO,CAAC,UAAW,SAAU,QAAS,UAAW,aAAc,UAAW,SAAU,UAAW,cAE/FC,GAAaC,OAAaC,MAAM,CACpCtD,MAAOqD,OAAaE,WACpBtD,SAAUoD,OAAaE,WACvBrD,QAASmD,OAAaG,IAAI,IAAID,WAC9BpD,IAAKkD,OAAYI,MAAMN,MA+FVsD,GA5FM,SAAC,GAAqC,EAAnCC,QAAoC,IAA3BrJ,EAA0B,EAA1BA,KAAMsJ,EAAoB,EAApBA,cAC/B9C,EAAWC,cADwC,EAGjChC,mBAAQ,OAACzE,QAAD,IAACA,OAAD,EAACA,EAAM+C,OAHkB,mBAGlD2D,EAHkD,KAG5CC,EAH4C,OAIEC,mBAAQ,CACjEC,SAAUC,uBAAYf,MADhBgB,EAJiD,EAIjDA,SAAUC,EAJuC,EAIvCA,aAAcC,EAJyB,EAIzBA,QAASC,EAJgB,EAIhBA,OAAQC,EAJQ,EAIRA,MAiB3ClE,EAAU1B,KAChB,OACE,8BACE,uBAAMuG,YAAU,EAACC,aAAa,MAAMX,SAAUJ,GAhBjC,SAACK,GAChB,IAAMlG,EAAW,yBACflB,IAAKD,EAAKC,KACPoH,GAFY,IAGftE,MAAO2D,IAETF,EDHsB,SAACxF,EAAIhB,GAAL,8CAAc,WAAOwG,GAAP,iBAAA5F,EAAA,+EAEb0G,EAAetG,EAAIhB,GAFN,gBAE5BqH,EAF4B,EAE5BA,KAERb,EAAS,CAAE5G,KAAMC,EAAmBC,QAASuH,IAJT,gDAMpCE,QAAQC,IAAI,KAAM+B,SANkB,yDAAd,sDCGbrI,CAAWlB,EAAKC,IAAKkB,IAE9BgG,IACAR,EAAQ,MACR2C,OAME,UACE,cAACtB,GAAA,EAAD,CACEhH,GAAG,QACH+C,MAAM,QACNkE,KAAK,QACL1E,QAAQ,WACRJ,UAAWF,EAAQ2C,UACnB1B,KAAK,QACLgE,SAAUnB,EACVoB,QAAOjB,EAAOvE,MACdyF,WAAS,EACTQ,aAAY,OAAE5I,QAAF,IAAEA,OAAF,EAAEA,EAAM2C,QAEtB,cAACqF,GAAA,EAAD,CACEhH,GAAG,WACH+C,MAAM,YACNkE,KAAK,WACL1E,QAAQ,WACRJ,UAAWF,EAAQ2C,UACnB1B,KAAK,QACLgE,SAAUnB,EACVoB,QAAOjB,EAAOtE,SACdwF,WAAS,EACTQ,aAAY,OAAE5I,QAAF,IAAEA,OAAF,EAAEA,EAAM4C,WAEtB,cAAC,cAAD,CACEyF,GACE,cAACC,GAAA,EAAD,CAAQC,MAAO,cAACC,GAAA,EAAD,IAAWrF,UAAWF,EAAQ2C,UAA7C,SACGE,GAAK/F,KAAI,SAAC+C,EAAK2F,GAAN,OACR,cAACC,GAAA,EAAD,CAAsBC,MAAO7F,EAA7B,SACGA,GADY2F,QAMrBR,KAAK,MACLhB,QAASA,EACTkB,QAAOjB,EAAOpE,IACd8F,aAAY,OAAE5I,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,MAEtB,cAACkF,GAAA,EAAD,CACEhH,GAAG,UACH+C,MAAM,OACNkE,KAAK,UACLY,WAAS,EACT3E,KAAK,QACLgE,SAAUnB,EACV+B,KAAM,EACN3F,UAAWF,EAAQ2C,UACnBrC,QAAQ,WACR4E,QAAOjB,EAAOrE,QACduF,WAAS,EACTQ,aAAY,OAAE5I,QAAF,IAAEA,OAAF,EAAEA,EAAM6C,UAEtB,cAAC,KAAD,CAAYkG,UAAU,EAAOC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtC,EAAQsC,MAC7D,sBAAK9F,UAAWF,EAAQkG,QAAxB,UACE,cAAClF,EAAA,EAAD,CAAQ5B,MAAM,YAAYkB,QAAQ,WAAWqB,QAAS0E,EAAtD,oBAEU,IACV,cAACrF,EAAA,EAAD,CAAQ5B,MAAM,UAAUkB,QAAQ,WAAW3D,KAAK,SAAhD,2B,SCnGJ2B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiE,MAAO,CACLC,QAASlE,EAAMe,QAAQ,GACvBqD,aAAcpE,EAAMe,QAAQ,IAE9BgH,OAAQ,CACNC,QAAS,OACTC,eAAgB,iBAElB7G,QAAS,CACPN,UAAWd,EAAMe,QAAQ,IAE3BO,MAAO,CACL4G,MAAO,OACPC,aAAc,EACdrH,UAAWd,EAAMe,QAAQ,GACzBqD,aAAcpE,EAAMe,QAAQ,IAE9BF,KAAM,CACJC,UAAWd,EAAMe,QAAQ,QAgGdqH,GA5FK,SAAC,GAAkC,IAAhCR,EAA+B,EAA/BA,QACbrI,GAD4C,EAAtB8I,SAAsB,EAAZC,MACnBC,OAAbhJ,IACFwF,EAAWC,cAEXjH,EAAcgF,aAAY,SAAC9E,GAAD,OAAWA,EAAMH,MAAMC,eAJH,EAMpBiF,oBAAS,GANW,mBAM7CwF,EAN6C,KAMnCC,EANmC,KAQ5CC,EAAoBC,eAApBD,gBAERE,qBAAU,WACR7D,EF/B2B,SAACxF,GAAD,8CAAQ,WAAOwF,GAAP,iBAAA5F,EAAA,+EAEZ0G,EAAoBtG,GAFR,gBAE3BqG,EAF2B,EAE3BA,KACRb,EAAS,CACP5G,KAAMC,EACNC,QAASuH,IALwB,gDAQnCE,QAAQC,IAAR,MARmC,yDAAR,sDE+BlBzG,CAAgBC,MACxB,CAACwF,EAAUxF,IAEd,IAA6B0B,EAiBvBO,EAAU1B,KAChB,OACE,cAAC+I,GAAA,EAAD,CAAOnH,UAAWF,EAAQyC,MAAO6E,UAAW,EAA5C,SACGN,EACC,cAAC,GAAD,CAAcjK,KAAMR,EAAa8J,cARjB,WACpBY,GAAY,MASR,gCACE,sBAAK/G,UAAWF,EAAQuG,OAAxB,UACE,cAAClG,EAAA,EAAD,CAAYC,QAAQ,KAAKK,cAAY,EAArC,gBACGpE,QADH,IACGA,OADH,EACGA,EAAamD,QAEhB,gCACGwH,GAAmB,oCAAM,cAAClG,EAAA,EAAD,CACxB5B,MAAM,UACNkB,QAAQ,WACRiH,UAAW,cAAC,KAAD,IACX5F,QAxBO,WACnBsF,GAAY,IAmBwB,kBAOhB,OAETC,GAAmB,cAAClG,EAAA,EAAD,CAClB5B,MAAM,YACNkB,QAAQ,WACRqB,QArCK,WACjB4B,EFLsB,SAACxF,GAAD,8CAAQ,WAAOwF,GAAP,iBAAA5F,EAAA,+EAEP0G,EAAetG,GAFR,gBAEtBqG,EAFsB,EAEtBA,KACRb,EAAS,CACP5G,KAAMC,EACNC,QAASuH,EAAKpH,MALc,gDAQ9BsH,QAAQC,IAAR,MAR8B,yDAAR,sDEKbnG,CAAW7B,EAAYS,MAChCoJ,EAAQoB,KAAK,WAoCDD,UAAW,cAAC,KAAD,IAJO,0BAWxB,cAACE,GAAA,EAAD,IACA,cAACpH,EAAA,EAAD,CAAYC,QAAQ,WAAWK,cAAY,EAA3C,gBACGpE,QADH,IACGA,OADH,EACGA,EAAaoD,WAEhB,eAACU,EAAA,EAAD,CAAYC,QAAQ,UAAUI,UAAU,IAAIC,cAAY,EAAxD,WArDqBlB,EAsDC,OAAClD,QAAD,IAACA,OAAD,EAACA,EAAawD,UArDnCQ,IAAOd,GAAMe,WAoDd,cAGA,cAACK,GAAA,EAAD,CACEC,MAAK,mBAAOvE,QAAP,IAAOA,OAAP,EAAOA,EAAasD,KACzBS,QAAQ,WACRJ,UAAWF,EAAQX,OAGrB,sBAAKa,UAAWF,EAAQJ,QAAxB,UACE,qBACEgC,KAAgB,OAAXrF,QAAW,IAAXA,OAAA,EAAAA,EAAauD,QAASM,GAC3B4B,IAAI,OACJ9B,UAAWF,EAAQF,QAErB,cAACO,EAAA,EAAD,CAAYC,QAAQ,QAAQK,cAAY,EAAxC,gBACGpE,QADH,IACGA,OADH,EACGA,EAAaqD,mBCxFtBtB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJiJ,SAAU,GAEZC,WAAY,CACVC,YAAapJ,EAAMe,QAAQ,IAE7BG,MAAO,CACLgI,SAAU,GAEZvF,UAAW,CACT7C,UAAWd,EAAMe,QAAQ,QA2FdsI,GAvFH,WAAO,IAAD,EACwCV,eAAhDW,EADQ,EACRA,kBAAmBC,EADX,EACWA,OAASb,EADpB,EACoBA,gBAC9B3D,EAAWC,cAFD,EAIQhC,oBAAS,GAJjB,mBAIT6B,EAJS,KAIH2E,EAJG,KAKhBZ,qBAAU,WACR7D,EHhDsB,uCAAM,WAAOA,GAAP,iBAAA5F,EAAA,+EAEL0G,IAFK,gBAEpBD,EAFoB,EAEpBA,KACRb,EAAS,CACP5G,KAAMC,EACNC,QAASuH,IALiB,gDAQ5BE,QAAQC,IAAR,MAR4B,yDAAN,yDGiDrB,CAAChB,IAEJ,IAQMvD,EAAU1B,KAGhB,OADsB6I,eAAdc,UACc,6CAGpB,qCACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAWzJ,SAAS,KAApB,UACE,cAAC0J,EAAA,EAAD,CAAQzJ,SAAS,SAASS,MAAM,UAAUkI,UAAW,EAArD,SACE,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLrI,UAAWF,EAAQ2H,WACnBvI,MAAM,UACNoJ,aAAW,OAJb,SAME,cAAC,IAAD,MAGF,cAACnI,EAAA,EAAD,CACEC,QAAQ,KACRlB,MAAM,YACNc,UAAWF,EAAQN,MAHrB,SAKE,mBAAG+I,KAAK,kDAAR,2BAEAvB,GAAmB,cAAClG,EAAA,EAAD,CACnB5B,MAAM,UACNkB,QAAQ,WACRiH,UAAW,cAAC,IAAD,IACX5F,QAAS,kBAAMmG,KAJI,oBAQpBZ,GAAmB,gCAAK,cAAClG,EAAA,EAAD,CACvB5B,MAAM,UACNkB,QAAQ,WACRiH,UAAW,cAAC,IAAD,IACX5F,QA/CO,WACjBqG,GAAQ,IA0CyB,yBAAL,IAOV,cAAChH,EAAA,EAAD,CACR5B,MAAM,YACNkB,QAAQ,WACRiH,UAAW,cAAC,IAAD,IACX5F,QAAS,kBAAMoG,KAJP,6BAUd,cAAC7F,EAAA,EAAD,CAAMC,WAAS,EAACjC,UAAWF,EAAQmC,UAAnC,SACE,cAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,SAASjI,UAAWY,KACtC,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,aAAajI,UAAWkG,QAE5C,cAAC,IAAD,CAAUgC,KAAK,IAAI1H,GAAG,kBAK5B,cAAC,GAAD,CAAamC,KAAMA,EAAMC,YApEX,WAClB0E,GAAQ,aChDZa,IAASC,OACP,cAAC,KAAD,CAAeC,OAJFC,4BAKPC,SAJSD,mCAKTE,YAAaC,OAAOtC,SAASuC,OAFnC,SAGQ,cAAC,IAAD,CAAUhM,MAAOA,EAAjB,SACE,cAAC,GAAD,QAIViM,SAASC,eAAe,W","file":"static/js/main.135a72ed.chunk.js","sourcesContent":["export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const FETCH_SINGLE_POST = \"FETCH_SINGLE_POST\";\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n","import * as types from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  currentPost: null,\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case types.FETCH_SINGLE_POST:\r\n      return {\r\n        ...state,\r\n        currentPost: action.payload,\r\n      };\r\n    case types.CREATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n    case types.UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id === action.payload._id) {\r\n            return action.payload;\r\n          } else {\r\n            return post;\r\n          }\r\n        }),\r\n        currentPost: action.payload,\r\n      };\r\n    case types.DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n        currentPost: null,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./post\";\r\n\r\nconst rootReducer = combineReducers({ posts: postReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  compose(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nconst apiEndpoint = \"https://jacks-blog-backend.herokuapp.com/posts/\";\r\n\r\nexport const fetchPosts = async () => await axios.get(apiEndpoint);\r\n\r\nexport const fetchSinglePost = async (id) =>\r\n  await axios.get(`${apiEndpoint}${id}`);\r\n\r\nexport const createPost = async (post) => await axios.post(apiEndpoint, post);\r\n\r\nexport const updatePost = async (id, updatedPost) =>\r\n  await axios.patch(`${apiEndpoint}${id}`, updatedPost);\r\n\r\nexport const deletePost = async (id) =>\r\n  await axios.delete(`${apiEndpoint}${id}`);\r\n","export default __webpack_public_path__ + \"static/media/noimage.51df33d5.svg\";","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Chip,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport noImage from \"../images/noimage.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 374,\r\n    position: \"relative\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Post = ({ _id, title, subtitle, content, tag, image, createdAt }) => {\r\n  const classes = useStyles();\r\n\r\n  const convertRelativeTime = (date) => {\r\n    return moment(date).fromNow();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image || noImage}\r\n        title=\"Paella dish\"\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">Jack</Typography>\r\n        <Typography variant=\"body2\">\r\n          {convertRelativeTime(createdAt)}\r\n        </Typography>\r\n      </div>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"p\" gutterBottom>\r\n          {title}\r\n        </Typography>{\" \"}\r\n        <Typography variant=\"overline\" component=\"p\" gutterBottom>\r\n          {subtitle}\r\n        </Typography>{\" \"}\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {content?.substring(0, 250) + \"...\"}\r\n        </Typography>\r\n        <Chip label={`# ${tag}`} variant=\"outlined\" className={classes.chip} />\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <Link to={`/posts/${_id}`}>Read more</Link>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/grid_four.d897e640.svg\";","export default __webpack_public_path__ + \"static/media/grid_three.c45b945b.svg\";","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport gridFour from \"../images/grid_four.svg\";\r\nimport gridThree from \"../images/grid_three.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layoutShifter: {\r\n    float: \"right\",\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PostsList = () => {\r\n  const posts = useSelector((state) => state.posts.posts);\r\n\r\n  const [layout, setLayout] = useState(\"gridThree\");\r\n\r\n  const calculateMd = () => {\r\n    return layout === \"gridThree\" ? 4 : 3;\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {/* Layout Shifter */}\r\n      <div className={classes.layoutShifter}>\r\n        <Button\r\n          variant=\"text\"\r\n          size=\"small\"\r\n          onClick={() => setLayout(\"gridThree\")}\r\n        >\r\n          <img\r\n            src={gridThree}\r\n            style={{ background: layout === \"gridThree\" ? \"#ccc\" : \"\" }}\r\n            alt=\"Three Columns Grid Icon\"\r\n          />\r\n        </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          size=\"small\"\r\n          onClick={() => setLayout(\"gridFour\")}\r\n        >\r\n          <img\r\n            src={gridFour}\r\n            style={{ background: layout === \"gridFour\" ? \"#ccc\" : \"\" }}\r\n            alt=\"Four Columns Grid Icon\"\r\n          />\r\n        </Button>\r\n      </div>\r\n      <Grid container spacing={2} alignContent=\"stretch\">\r\n        {posts.length > 0 &&\r\n          posts.map((post) => (\r\n            <Grid item key={post?._id} xs={12} md={calculateMd()}>\r\n              <Post {...post} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React, { useState } from \"react\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  Input,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { createPost } from \"../actions/post\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst tags = [\"Fiction\", \"Poetry\", \"SciFi\", \"Romance\", \"Children's\", \"Fantasy\", \"Horror\", \"Mystery\", \"NonFiction\"];\r\n\r\nconst postSchema = yup.object().shape({\r\n  title: yup.string().required(),\r\n  subtitle: yup.string().required(),\r\n  content: yup.string().min(20).required(),\r\n  tag: yup.mixed().oneOf(tags),\r\n});\r\n\r\nconst AddPostForm = ({ open, handleClose }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [file, setFile] = useState(null);\r\n  const { register, handleSubmit, control, errors, reset } = useForm({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(createPost({ ...data, image: file }));\r\n    clearForm();\r\n  };\r\n\r\n  const clearForm = () => {\r\n    reset();\r\n    setFile(null);\r\n    handleClose();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle> Create a new post</DialogTitle>\r\n      <DialogContent>\r\n        <div className={classes.root}>\r\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.title ? true : false}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"subtitle\"\r\n              label=\"Sub Title\"\r\n              name=\"subtitle\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.subtitle ? true : false}\r\n              fullWidth\r\n            />\r\n            <Controller\r\n              as={\r\n                <Select\r\n                  input={<Input />}\r\n                  className={classes.textField}\r\n                  fullWidth\r\n                >\r\n                  {tags.map((tag, index) => (\r\n                    <MenuItem key={index} value={tag}>\r\n                      {tag}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              }\r\n              name=\"tag\"\r\n              control={control}\r\n              error={errors.tag ? true : false}\r\n              defaultValue={tags[0]}\r\n            />\r\n\r\n            <TextField\r\n              id=\"content\"\r\n              label=\"Body\"\r\n              name=\"content\"\r\n              multiline\r\n              size=\"small\"\r\n              inputRef={register}\r\n              rows={4}\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              error={errors.content ? true : false}\r\n              fullWidth\r\n            />\r\n\r\n            <FileBase64\r\n              multiple={false}\r\n              onDone={({ base64 }) => setFile(base64)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={clearForm} color=\"inherit\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          onClick={() => handleSubmit(onSubmit)()}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","import * as api from \"../api/index\";\r\nimport * as types from \"./types\";\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({\r\n      type: types.FETCH_POSTS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSinglePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchSinglePost(id);\r\n    dispatch({\r\n      type: types.FETCH_SINGLE_POST,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({\r\n      type: types.CREATE_POST,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: types.UPDATE_POST, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deletePost(id);\r\n    dispatch({\r\n      type: types.DELETE_POST,\r\n      payload: data._id,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Select, Input, MenuItem, Button } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { updatePost } from \"../actions/post\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  buttons: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst tags = [\"Fiction\", \"Poetry\", \"SciFi\", \"Romance\", \"Children's\", \"Fantasy\", \"Horror\", \"Mystery\", \"NonFiction\"];\r\n\r\nconst postSchema = yup.object().shape({\r\n  title: yup.string().required(),\r\n  subtitle: yup.string().required(),\r\n  content: yup.string().min(20).required(),\r\n  tag: yup.mixed().oneOf(tags),\r\n});\r\n\r\nconst EditPostForm = ({ history, post, closeEditMode }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [file, setFile] = useState(post?.image);\r\n  const { register, handleSubmit, control, errors, reset } = useForm({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedPost = {\r\n      _id: post._id,\r\n      ...data,\r\n      image: file,\r\n    };\r\n    dispatch(updatePost(post._id, updatedPost));\r\n\r\n    reset();\r\n    setFile(null);\r\n    closeEditMode();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          className={classes.textField}\r\n          size=\"small\"\r\n          inputRef={register}\r\n          error={errors.title ? true : false}\r\n          fullWidth\r\n          defaultValue={post?.title}\r\n        />\r\n        <TextField\r\n          id=\"subtitle\"\r\n          label=\"Sub title\"\r\n          name=\"subtitle\"\r\n          variant=\"outlined\"\r\n          className={classes.textField}\r\n          size=\"small\"\r\n          inputRef={register}\r\n          error={errors.subtitle ? true : false}\r\n          fullWidth\r\n          defaultValue={post?.subtitle}\r\n        />\r\n        <Controller\r\n          as={\r\n            <Select input={<Input />} className={classes.textField}>\r\n              {tags.map((tag, index) => (\r\n                <MenuItem key={index} value={tag}>\r\n                  {tag}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          }\r\n          name=\"tag\"\r\n          control={control}\r\n          error={errors.tag ? true : false}\r\n          defaultValue={post?.tag}\r\n        />\r\n        <TextField\r\n          id=\"content\"\r\n          label=\"Body\"\r\n          name=\"content\"\r\n          multiline\r\n          size=\"small\"\r\n          inputRef={register}\r\n          rows={4}\r\n          className={classes.textField}\r\n          variant=\"outlined\"\r\n          error={errors.content ? true : false}\r\n          fullWidth\r\n          defaultValue={post?.content}\r\n        />\r\n        <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\r\n        <div className={classes.buttons}>\r\n          <Button color=\"secondary\" variant=\"outlined\" onClick={closeEditMode}>\r\n            Cancel\r\n          </Button>{\" \"}\r\n          <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Paper, Divider, Button, Chip } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditPostForm from \"./EditPostForm\";\r\nimport { fetchSinglePost, deletePost } from \"../actions/post\";\r\nimport noImage from \"../images/noimage.svg\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    borderRadius: 5,\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst PostDetails = ({ history, location, match }) => {\r\n  const { id } = match.params;\r\n  const dispatch = useDispatch();\r\n\r\n  const currentPost = useSelector((state) => state.posts.currentPost);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSinglePost(id));\r\n  }, [dispatch, id]);\r\n\r\n  const convertRelativeTime = (date) => {\r\n    return moment(date).fromNow();\r\n  };\r\n\r\n  const removePost = () => {\r\n    dispatch(deletePost(currentPost._id));\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  const openEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const closeEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.paper} elevation={0}>\r\n      {editMode ? (\r\n        <EditPostForm post={currentPost} closeEditMode={closeEditMode} />\r\n      ) : (\r\n        <div>\r\n          <div className={classes.header}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {currentPost?.title}\r\n            </Typography>\r\n            <div>\r\n              {isAuthenticated && <div> <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                startIcon={<EditIcon />}\r\n                onClick={openEditMode}\r\n              >\r\n                Edit\r\n              </Button>{\" \"}</div>}\r\n              \r\n              {isAuthenticated && <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={removePost}\r\n                startIcon={<DeleteIcon />}\r\n              >\r\n                Delete\r\n              </Button>}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider />\r\n          <Typography variant=\"overline\" gutterBottom>\r\n            {currentPost?.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"caption\" component=\"p\" gutterBottom>\r\n            {convertRelativeTime(currentPost?.createdAt)} by Jack\r\n          </Typography>\r\n          <Chip\r\n            label={`# ${currentPost?.tag}`}\r\n            variant=\"outlined\"\r\n            className={classes.chip}\r\n          />\r\n\r\n          <div className={classes.content}>\r\n            <img\r\n              src={currentPost?.image || noImage}\r\n              alt=\"Post\"\r\n              className={classes.image}\r\n            />\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              {currentPost?.content}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPosts } from \"./actions/post\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Grid,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/MenuBook\";\r\nimport PenIcon from \"@material-ui/icons/Create\";\r\nimport Logout from \"@material-ui/icons/ExitToApp\";\r\nimport Login from \"@material-ui/icons/AssignmentInd\";\r\nimport PostsList from \"./components/PostsList\";\r\nimport AddPostForm from \"./components/AddPostForm\";\r\nimport PostDetails from \"./components/PostDetails\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const { loginWithRedirect, logout,  isAuthenticated } = useAuth0();\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const { isLoading } = useAuth0();\r\n  if (isLoading) return <div>Loading...</div>\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"secondary\"\r\n              className={classes.title}\r\n            >\r\n              <a href=\"https://jacks-blog-frontend.herokuapp.com/posts\">Jacks Blog</a>\r\n            </Typography>\r\n            {!isAuthenticated && <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              startIcon={<Login />}\r\n              onClick={() => loginWithRedirect()}\r\n            >\r\n              Log In\r\n            </Button> }\r\n            {isAuthenticated && <div><Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              startIcon={<PenIcon />}\r\n              onClick={handleOpen}\r\n            >\r\n              Create post\r\n            </Button> <Button\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              startIcon={<Logout />}\r\n              onClick={() => logout()}\r\n            >\r\n              Log Out\r\n            </Button></div> }\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid container className={classes.container}>\r\n          <Grid item xs={12}>\r\n            <Router>\r\n              <Switch>\r\n                <Route exact path=\"/posts\" component={PostsList} />\r\n                <Route exact path=\"/posts/:id\" component={PostDetails} />\r\n              </Switch>\r\n              <Redirect from=\"/\" to=\"/posts\" />\r\n            </Router>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <AddPostForm open={open} handleClose={handleClose} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\n\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nReactDOM.render(\r\n  <Auth0Provider domain= {domain}\r\n        clientId={clientId}\r\n        redirectUri={window.location.origin}>\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </Auth0Provider>\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}